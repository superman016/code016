{
    "display_id": "sai_6_6",
    "title": "\u77e9\u9635\u6c42\u548c",
    "description": {
        "format": "html",
        "value": "<p><span style=\"color: rgb(77, 77, 77);\">\u7ecf\u8fc7\u91cd\u91cd\u7b14\u8bd5\u9762\u8bd5\u7684\u8003\u9a8c\uff0c\u5c0f\u660e\u6210\u529f\u8fdb\u5165\u00a0Macrohard\u00a0\u516c\u53f8\u5de5\u4f5c\u3002</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u4eca\u5929\u5c0f\u660e\u7684\u4efb\u52a1\u662f\u586b\u6ee1\u8fd9\u4e48\u4e00\u5f20\u8868\uff1a</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u8868\u6709\u00a0n\u00a0\u884c\u00a0n\u00a0\u5217\uff0c\u884c\u548c\u5217\u7684\u7f16\u53f7\u90fd\u4ece1\u7b97\u8d77\u3002</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u5176\u4e2d\u7b2c\u00a0i\u00a0\u884c\u7b2c\u00a0j\u00a0\u4e2a\u5143\u7d20\u7684\u503c\u662f\u00a0gcd(i,\u00a0j)\u7684\u5e73\u65b9\uff0c</span></p><p><span style=\"color: rgb(77, 77, 77);\">gcd\u00a0\u8868\u793a\u6700\u5927\u516c\u7ea6\u6570\uff0c\u4ee5\u4e0b\u662f\u8fd9\u4e2a\u8868\u7684\u524d\u56db\u884c\u7684\u524d\u56db\u5217\uff1a</span></p><p><span style=\"color: rgb(77, 77, 77);\">1\u00a0\u00a01\u00a0\u00a01\u00a0\u00a01</span></p><p><span style=\"color: rgb(77, 77, 77);\">1\u00a0\u00a04\u00a0\u00a01\u00a0\u00a04</span></p><p><span style=\"color: rgb(77, 77, 77);\">1\u00a0\u00a01\u00a0\u00a09\u00a0\u00a01</span></p><p><span style=\"color: rgb(77, 77, 77);\">1\u00a0\u00a04\u00a0\u00a01\u00a016</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u5c0f\u660e\u7a81\u7136\u5192\u51fa\u4e00\u4e2a\u5947\u602a\u7684\u60f3\u6cd5\uff0c\u4ed6\u60f3\u77e5\u9053\u8fd9\u5f20\u8868\u4e2d\u6240\u6709\u5143\u7d20\u7684\u548c\u3002</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u7531\u4e8e\u8868\u8fc7\u4e8e\u5e9e\u5927\uff0c\u4ed6\u5e0c\u671b\u501f\u52a9\u8ba1\u7b97\u673a\u7684\u529b\u91cf\u3002</span></p>"
    },
    "tags": [
        "2018\u84dd\u6865\u676f\u56fd\u8d5b"
    ],
    "input_description": {
        "format": "html",
        "value": "<p><span style=\"color: rgb(77, 77, 77);\">\u4e00\u884c\u4e00\u4e2a\u6b63\u6574\u6570\u00a0n\u00a0\u610f\u4e49\u89c1\u9898\u3002</span><br /></p><p><span style=\"color: rgb(77, 77, 77);\">\u5bf9\u4e8e\u00a030%\u00a0\u7684\u6570\u636e\uff0cn\u00a0&lt;=\u00a01000</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u5b58\u5728\u00a010%\u00a0\u7684\u6570\u636e\uff0cn\u00a0=\u00a010^5</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u5bf9\u4e8e\u00a060%\u00a0\u7684\u6570\u636e\uff0cn\u00a0&lt;=\u00a010^6</span></p><p><span style=\"color: rgb(77, 77, 77);\">\u5bf9\u4e8e\u00a0100%\u00a0\u7684\u6570\u636e\uff0cn\u00a0&lt;=\u00a010^7</span></p>"
    },
    "output_description": {
        "format": "html",
        "value": "<p><span style=\"color: rgb(77, 77, 77);\">\u4e00\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a\u6240\u6709\u5143\u7d20\u7684\u548c\u3002\u7531\u4e8e\u7b54\u6848\u6bd4\u8f83\u5927\uff0c\u8bf7\u8f93\u51fa\u6a21\u00a0(10^9\u00a0+\u00a07)(\u5373\uff1a\u5341\u4ebf\u96f6\u4e03)\u00a0\u540e\u7684\u7ed3\u679c\u3002</span><br /></p>"
    },
    "test_case_score": [
        {
            "score": 6,
            "input_name": "1.in",
            "output_name": "1.out"
        },
        {
            "score": 8,
            "input_name": "2.in",
            "output_name": "2.out"
        },
        {
            "score": 8,
            "input_name": "3.in",
            "output_name": "3.out"
        },
        {
            "score": 10,
            "input_name": "4.in",
            "output_name": "4.out"
        },
        {
            "score": 11,
            "input_name": "5.in",
            "output_name": "5.out"
        },
        {
            "score": 11,
            "input_name": "6.in",
            "output_name": "6.out"
        },
        {
            "score": 12,
            "input_name": "7.in",
            "output_name": "7.out"
        },
        {
            "score": 12,
            "input_name": "8.in",
            "output_name": "8.out"
        },
        {
            "score": 13,
            "input_name": "9.in",
            "output_name": "9.out"
        },
        {
            "score": 14,
            "input_name": "10.in",
            "output_name": "10.out"
        }
    ],
    "hint": {
        "format": "html",
        "value": ""
    },
    "time_limit": 2000,
    "memory_limit": 256,
    "samples": [
        {
            "input": "4\n",
            "output": "48\n"
        }
    ],
    "template": {},
    "spj": null,
    "rule_type": "OI",
    "source": "2018\u5e74\u7b2c\u4e5d\u5c4a\u84dd\u6865\u676fc/c++B\u7ec4\u56fd\u8d5b\u51b3\u8d5b\u771f\u9898\u9898\u76ee",
    "answers": [
        {
            "language": "C++",
            "code": "#include<bits/stdc++.h>\n#define mem(a,b) memset(a,b,sizeof(a))\nusing namespace std;\ntypedef long long ll;\nconst ll mod = 1e9+7;\nconst int maxn = 1e7+7;\nconst double esp = 1e-12;\nconst int ff = 0x3f3f3f3f;\nmap<int,int>::iterator it;\n \nll inv6;\n \nint mu[maxn],vis[maxn],pri[maxn],len;\nvoid init() {\n    memset(vis, 0, sizeof vis);\n    mu[1] = 1; len = 0;\n    for (int i = 2; i < maxn; ++i) {\n        if (!vis[i]) {\n            pri[len++] = i;\n            mu[i] = -1;\n        }\n        for (int j = 0; j < len && i * pri[j] < maxn; ++j) {\n            vis[i * pri[j]] = 1;\n            if (i % pri[j]) mu[i * pri[j]] = -mu[i];\n            else {\n                mu[i * pri[j]] = 0;\n                break;\n            }\n        }\n    }\n    for(int i = 1; i < maxn; i++)\n\t{\n\t     mu[i]+=mu[i-1];\n\t}\n}\n \n//\u89e3\u51b3 gcd([1,n],[1,n]) == 1 \u7684\u4e2a\u6570 \nll dp[maxn];\nll solveGcd(ll n)\n{\n\tll ans = 0;\n\tint j;\n\tfor(ll i = 1; i <= n; i=j+1)\n\t{\n\t\tj = n/(n/i);\n\t\tll tmp = (n/i)*(n/i);\n\t\tif(tmp >= mod) tmp %= mod;\n\t\tans += (ll)(mu[j]-mu[i-1])*tmp;\n\t\tif(ans >= mod) ans %= mod;\n\t}\n\treturn ans;\n}\n \nll qm(ll a, ll n){\n\tll ans = 1;\n\twhile(n){\n\t\tif(n%2){\n\t\t\tans = ans*a%mod;\n\t\t}\n\t\ta = a*a%mod;\n\t\tn/=2LL;\n\t}\n\treturn ans;\n}\n \ninline ll sump2(ll n)\n{\n\treturn n*(n+1)%mod*(2*n+1)%mod*inv6%mod;\n}\n \nint main()\n{\n\tinv6 = qm(6,mod-2);\n\tinit();\n\tll n;\n\tcin>>n;\n\tll ans = 0;\n\tll j;\n\tfor(ll i = 1; i <= n; i=j+1)\n\t{\n\t\tj = n/(n/i);\n\t\tans += solveGcd(n/i)*(sump2(j)-sump2(i-1)+mod)%mod;\n\t\tif(ans >= mod) ans %= mod;\n\t}\n\tcout << ans << endl;\n\treturn 0;\t\n}"
        }
    ]
}